$date
2021-04-02T17:08+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module ALU $end
 $var wire 32 ! io_arg_y $end
 $var wire 32 " _io_alu_out_T_1 $end
 $var wire 32 # _GEN_2 $end
 $var wire 32 $ _io_alu_out_T $end
 $var wire 1 % _T $end
 $var wire 32 & _io_alu_out_T_11 $end
 $var wire 63 ' _GEN_5 $end
 $var wire 32 ( _io_alu_out_T_14 $end
 $var wire 63 ) _GEN_8 $end
 $var wire 1 * _io_alu_out_T_17 $end
 $var wire 32 + io_arg_x $end
 $var wire 32 , _io_alu_out_T_3 $end
 $var wire 32 - _io_alu_out_T_6 $end
 $var wire 63 . _GEN_7 $end
 $var wire 32 / _io_alu_out_T_16 $end
 $var wire 32 0 io_alu_out $end
 $var wire 1 1 _GEN_1 $end
 $var wire 32 2 _io_alu_out_T_10 $end
 $var wire 32 3 io_alu_oper $end
 $var wire 63 4 _GEN_4 $end
 $var wire 32 5 _io_alu_out_T_13 $end
 $var wire 1 6 clock $end
 $var wire 63 7 _io_alu_out_T_8 $end
 $var wire 33 8 _io_alu_out_T_2 $end
 $var wire 32 9 _io_alu_out_T_5 $end
 $var wire 63 : _GEN_6 $end
 $var wire 1 ; _GEN_0 $end
 $var wire 1 < _io_alu_out_T_18 $end
 $var wire 63 = _GEN_9 $end
 $var wire 1 > reset $end
 $var wire 32 ? _GEN_3 $end
 $var wire 33 @ _io_alu_out_T_4 $end
 $var wire 5 A _io_alu_out_T_7 $end
$upscope $end
$enddefinitions $end
$dumpvars
0%
b00000000000000000000000000000000 &
b000000000000000000000000000000000000000000000000000000000000000 4
b000000000000000000000000000000000 @
b000000000000000000000000000000000 8
0;
0<
b00000000000000000000000000000000 (
b000000000000000000000000000000000000000000000000000000000000000 .
b00000000000000000000000000000000 !
0>
b00000000000000000000000000000000 ?
06
b00000000000000000000000000000000 "
b00000000000000000000000000000000 #
b000000000000000000000000000000000000000000000000000000000000000 )
b00000000000000000000000000000000 9
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 5
b00000 A
b000000000000000000000000000000000000000000000000000000000000000 '
b00000000000000000000000000000000 /
b000000000000000000000000000000000000000000000000000000000000000 =
b00000000000000000000000000000000 0
b000000000000000000000000000000000000000000000000000000000000000 7
01
0*
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b000000000000000000000000000000000000000000000000000000000000000 :
b00000000000000000000000000000000 $
b00000000000000000000000000000000 -
$end
#0
1%
1>
#1
16
#6
b00000000000000000000000000000010 3
b00000000000000000000000000000000 -
0%
b000000000000000000000000000000000000000000000000000000000010100 .
b00000000000000000000000000001010 &
b00000000000000000000000000000000 5
06
b000000000000000000000000000000000000000000000000000000000010100 =
b00000000000000000000000000000000 (
b000000000000000000000000000000000000000000000000010100000000000 7
b00000000000000000000000000001010 /
0>
b000000000000000000000000000000000000000000000000000000000010100 )
b00000000000000000000000000001010 !
b00000000000000000000000000010100 0
b00000000000000000000000000001010 "
b000000000000000000000000000000000 @
b000000000000000000000000000010100 8
b00000000000000000000000000000000 2
b00000000000000000000000000000000 9
b00000000000000000000000000001010 $
b00000000000000000000000000001010 +
b01010 A
b00000000000000000000000000010100 ,
#11
16
#16
06
#21
16
#26
06
#31
16
#36
06
#41
16
#46
06
#51
16
#56
06
#61
16
#66
06
#71
16
#76
06
#81
16
#86
06
#91
16
#96
06
#101
16
#106
b00000000000000000000000000000000 3
1%
b000000000000000000000000000000000000000000000000000000000000000 .
b00000000000000000000000000000000 &
06
b000000000000000000000000000000000000000000000000000000000000000 =
b000000000000000000000000000000000000000000000000000000000000000 7
b00000000000000000000000000000000 /
b000000000000000000000000000000000000000000000000000000000000000 )
b00000000000000000000000000000000 !
b00000000000000000000000000000000 0
b00000000000000000000000000000000 "
b000000000000000000000000000000000 8
b00000000000000000000000000000000 $
b00000000000000000000000000000000 +
b00000 A
b00000000000000000000000000000000 ,
#111
16
#116
06
