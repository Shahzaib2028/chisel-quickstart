circuit My_Queue :
  module My_Queue :
    input clock : Clock
    input reset : UInt<1>
    input io_f1 : UInt<1>
    input io_f2 : UInt<1>
    input io_r1 : UInt<1>
    input io_r2 : UInt<1>
    output io_out : UInt<4>

    reg state : UInt<2>, clock with :
      reset => (UInt<1>("h0"), state) @[Task1.scala 18:28]
    node _T = eq(UInt<2>("h0"), state) @[Conditional.scala 37:30]
    node _T_1 = eq(io_f1, UInt<1>("h0")) @[Task1.scala 22:36]
    node _T_2 = eq(io_f2, UInt<1>("h0")) @[Task1.scala 22:57]
    node _T_3 = and(_T_1, _T_2) @[Task1.scala 22:48]
    node _T_4 = eq(io_f1, UInt<1>("h1")) @[Task1.scala 24:42]
    node _T_5 = eq(io_f2, UInt<1>("h0")) @[Task1.scala 24:62]
    node _T_6 = and(_T_4, _T_5) @[Task1.scala 24:53]
    node _T_7 = eq(io_f1, UInt<1>("h0")) @[Task1.scala 26:42]
    node _T_8 = eq(io_f2, UInt<1>("h1")) @[Task1.scala 26:63]
    node _T_9 = and(_T_7, _T_8) @[Task1.scala 26:54]
    node _T_10 = eq(io_f1, UInt<1>("h1")) @[Task1.scala 28:42]
    node _T_11 = eq(io_f2, UInt<1>("h1")) @[Task1.scala 28:62]
    node _T_12 = and(_T_10, _T_11) @[Task1.scala 28:53]
    node _GEN_0 = mux(_T_12, UInt<2>("h1"), state) @[Task1.scala 28:73 Task1.scala 29:39 Task1.scala 18:28]
    node _GEN_1 = mux(_T_9, UInt<3>("h5"), _GEN_0) @[Task1.scala 26:74 Task1.scala 27:39]
    node _GEN_2 = mux(_T_6, UInt<2>("h1"), _GEN_1) @[Task1.scala 24:74 Task1.scala 25:39]
    node _GEN_3 = mux(_T_3, UInt<2>("h0"), _GEN_2) @[Task1.scala 22:69 Task1.scala 23:39]
    node _T_13 = eq(UInt<2>("h1"), state) @[Conditional.scala 37:30]
    node _T_14 = eq(io_f1, UInt<1>("h0")) @[Task1.scala 34:36]
    node _T_15 = eq(io_r1, UInt<1>("h0")) @[Task1.scala 34:57]
    node _T_16 = and(_T_14, _T_15) @[Task1.scala 34:48]
    node _T_17 = eq(io_f1, UInt<1>("h1")) @[Task1.scala 36:42]
    node _T_18 = eq(io_f1, UInt<1>("h0")) @[Task1.scala 38:42]
    node _T_19 = eq(io_r1, UInt<1>("h1")) @[Task1.scala 38:63]
    node _T_20 = and(_T_18, _T_19) @[Task1.scala 38:54]
    node _GEN_4 = mux(_T_20, UInt<2>("h0"), state) @[Task1.scala 38:74 Task1.scala 39:39 Task1.scala 18:28]
    node _GEN_5 = mux(_T_17, UInt<2>("h2"), _GEN_4) @[Task1.scala 36:53 Task1.scala 37:39]
    node _GEN_6 = mux(_T_16, UInt<2>("h1"), _GEN_5) @[Task1.scala 34:69 Task1.scala 35:39]
    node _T_21 = eq(UInt<2>("h2"), state) @[Conditional.scala 37:30]
    node _T_22 = eq(io_f1, UInt<1>("h0")) @[Task1.scala 44:36]
    node _T_23 = eq(io_r1, UInt<1>("h0")) @[Task1.scala 44:57]
    node _T_24 = and(_T_22, _T_23) @[Task1.scala 44:48]
    node _T_25 = eq(io_f1, UInt<1>("h1")) @[Task1.scala 46:42]
    node _T_26 = eq(io_f1, UInt<1>("h0")) @[Task1.scala 48:42]
    node _T_27 = eq(io_r1, UInt<1>("h1")) @[Task1.scala 48:63]
    node _T_28 = and(_T_26, _T_27) @[Task1.scala 48:54]
    node _GEN_7 = mux(_T_28, UInt<2>("h1"), state) @[Task1.scala 48:74 Task1.scala 49:39 Task1.scala 18:28]
    node _GEN_8 = mux(_T_25, UInt<2>("h3"), _GEN_7) @[Task1.scala 46:53 Task1.scala 47:39]
    node _GEN_9 = mux(_T_24, UInt<2>("h2"), _GEN_8) @[Task1.scala 44:69 Task1.scala 45:39]
    node _T_29 = eq(UInt<2>("h3"), state) @[Conditional.scala 37:30]
    node _T_30 = eq(UInt<3>("h4"), state) @[Conditional.scala 37:30]
    node _T_31 = eq(io_f2, UInt<1>("h1")) @[Task1.scala 58:36]
    node _T_32 = eq(io_f2, UInt<1>("h0")) @[Task1.scala 60:42]
    node _T_33 = eq(io_r2, UInt<1>("h0")) @[Task1.scala 60:63]
    node _T_34 = and(_T_32, _T_33) @[Task1.scala 60:54]
    node _T_35 = eq(io_f1, UInt<1>("h0")) @[Task1.scala 62:42]
    node _T_36 = eq(io_r1, UInt<1>("h1")) @[Task1.scala 62:63]
    node _T_37 = and(_T_35, _T_36) @[Task1.scala 62:54]
    node _GEN_10 = mux(_T_37, UInt<3>("h5"), state) @[Task1.scala 62:74 Task1.scala 63:39 Task1.scala 18:28]
    node _GEN_11 = mux(_T_34, UInt<3>("h4"), _GEN_10) @[Task1.scala 60:75 Task1.scala 61:39]
    node _GEN_12 = mux(_T_31, UInt<2>("h3"), _GEN_11) @[Task1.scala 58:47 Task1.scala 59:39]
    node _T_38 = eq(UInt<3>("h5"), state) @[Conditional.scala 37:30]
    node _T_39 = eq(io_f2, UInt<1>("h1")) @[Task1.scala 68:36]
    node _T_40 = eq(io_f2, UInt<1>("h0")) @[Task1.scala 70:42]
    node _T_41 = eq(io_r2, UInt<1>("h0")) @[Task1.scala 70:63]
    node _T_42 = and(_T_40, _T_41) @[Task1.scala 70:54]
    node _T_43 = eq(io_f1, UInt<1>("h0")) @[Task1.scala 72:42]
    node _T_44 = eq(io_r1, UInt<1>("h1")) @[Task1.scala 72:63]
    node _T_45 = and(_T_43, _T_44) @[Task1.scala 72:54]
    node _GEN_13 = mux(_T_45, UInt<2>("h0"), state) @[Task1.scala 72:74 Task1.scala 73:39 Task1.scala 18:28]
    node _GEN_14 = mux(_T_42, UInt<3>("h5"), _GEN_13) @[Task1.scala 70:75 Task1.scala 71:39]
    node _GEN_15 = mux(_T_39, UInt<3>("h4"), _GEN_14) @[Task1.scala 68:47 Task1.scala 69:39]
    node _GEN_16 = mux(_T_38, _GEN_15, state) @[Conditional.scala 39:67 Task1.scala 18:28]
    node _GEN_17 = mux(_T_30, _GEN_12, _GEN_16) @[Conditional.scala 39:67]
    node _GEN_18 = mux(_T_29, UInt<2>("h0"), _GEN_17) @[Conditional.scala 39:67 Task1.scala 54:31]
    node _GEN_19 = mux(_T_21, _GEN_9, _GEN_18) @[Conditional.scala 39:67]
    node _GEN_20 = mux(_T_13, _GEN_6, _GEN_19) @[Conditional.scala 39:67]
    node _GEN_21 = mux(_T, _GEN_3, _GEN_20) @[Conditional.scala 40:58]
    node _T_46 = eq(state, UInt<2>("h2")) @[Task1.scala 86:22]
    node _T_47 = eq(io_f1, UInt<1>("h0")) @[Task1.scala 86:39]
    node _T_48 = eq(io_r1, UInt<1>("h0")) @[Task1.scala 86:60]
    node _T_49 = and(_T_47, _T_48) @[Task1.scala 86:51]
    node _T_50 = and(_T_46, _T_49) @[Task1.scala 86:29]
    node _T_51 = eq(state, UInt<2>("h2")) @[Task1.scala 86:84]
    node _T_52 = eq(io_f1, UInt<1>("h1")) @[Task1.scala 86:101]
    node _T_53 = and(_T_51, _T_52) @[Task1.scala 86:91]
    node _T_54 = or(_T_50, _T_53) @[Task1.scala 86:74]
    node _T_55 = eq(state, UInt<2>("h2")) @[Task1.scala 86:124]
    node _T_56 = eq(io_f1, UInt<1>("h0")) @[Task1.scala 86:141]
    node _T_57 = and(_T_55, _T_56) @[Task1.scala 86:131]
    node _T_58 = eq(io_r1, UInt<1>("h1")) @[Task1.scala 86:164]
    node _T_59 = and(_T_57, _T_58) @[Task1.scala 86:154]
    node _T_60 = or(_T_54, _T_59) @[Task1.scala 86:114]
    node _T_61 = eq(state, UInt<3>("h4")) @[Task1.scala 88:27]
    node _T_62 = eq(io_f2, UInt<1>("h1")) @[Task1.scala 88:44]
    node _T_63 = and(_T_61, _T_62) @[Task1.scala 88:34]
    node _T_64 = eq(state, UInt<3>("h4")) @[Task1.scala 88:67]
    node _T_65 = eq(io_f2, UInt<1>("h0")) @[Task1.scala 88:84]
    node _T_66 = eq(io_r2, UInt<1>("h0")) @[Task1.scala 88:105]
    node _T_67 = and(_T_65, _T_66) @[Task1.scala 88:96]
    node _T_68 = and(_T_64, _T_67) @[Task1.scala 88:74]
    node _T_69 = or(_T_63, _T_68) @[Task1.scala 88:57]
    node _T_70 = eq(state, UInt<3>("h4")) @[Task1.scala 88:129]
    node _T_71 = eq(io_f2, UInt<1>("h0")) @[Task1.scala 88:146]
    node _T_72 = and(_T_70, _T_71) @[Task1.scala 88:136]
    node _T_73 = eq(io_r2, UInt<1>("h1")) @[Task1.scala 88:170]
    node _T_74 = and(_T_72, _T_73) @[Task1.scala 88:160]
    node _T_75 = or(_T_69, _T_74) @[Task1.scala 88:119]
    node _GEN_22 = mux(_T_75, UInt<3>("h7"), UInt<1>("h0")) @[Task1.scala 88:183 Task1.scala 89:23 Task1.scala 91:24]
    node _GEN_23 = mux(_T_60, UInt<2>("h3"), _GEN_22) @[Task1.scala 86:177 Task1.scala 87:23]
    io_out <= _GEN_23
    state <= mux(reset, UInt<2>("h0"), bits(_GEN_21, 1, 0)) @[Task1.scala 18:28 Task1.scala 18:28]
