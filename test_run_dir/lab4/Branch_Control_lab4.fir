;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Branch_Control_lab4 : 
  module Branch_Control_lab4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip func3 : UInt<3>, flip branch : UInt<1>, flip arg_y : UInt<32>, flip arg_x : UInt<32>, br_taken : UInt<1>}
    
    node _T = eq(io.func3, UInt<1>("h00")) @[Task1.scala 18:23]
    node _T_1 = eq(io.branch, UInt<1>("h01")) @[Task1.scala 18:49]
    node _T_2 = and(_T, _T_1) @[Task1.scala 18:36]
    when _T_2 : @[Task1.scala 18:57]
      node _io_br_taken_T = eq(io.arg_x, io.arg_y) @[Task1.scala 19:41]
      io.br_taken <= _io_br_taken_T @[Task1.scala 19:29]
      skip @[Task1.scala 18:57]
    else : @[Task1.scala 21:63]
      node _T_3 = eq(io.func3, UInt<1>("h01")) @[Task1.scala 21:29]
      node _T_4 = eq(io.branch, UInt<1>("h01")) @[Task1.scala 21:55]
      node _T_5 = and(_T_3, _T_4) @[Task1.scala 21:42]
      when _T_5 : @[Task1.scala 21:63]
        node _io_br_taken_T_1 = neq(io.arg_x, io.arg_y) @[Task1.scala 22:41]
        io.br_taken <= _io_br_taken_T_1 @[Task1.scala 22:29]
        skip @[Task1.scala 21:63]
      else : @[Task1.scala 24:63]
        node _T_6 = eq(io.func3, UInt<3>("h04")) @[Task1.scala 24:29]
        node _T_7 = eq(io.branch, UInt<1>("h01")) @[Task1.scala 24:55]
        node _T_8 = and(_T_6, _T_7) @[Task1.scala 24:42]
        when _T_8 : @[Task1.scala 24:63]
          node _io_br_taken_T_2 = lt(io.arg_x, io.arg_y) @[Task1.scala 25:41]
          io.br_taken <= _io_br_taken_T_2 @[Task1.scala 25:29]
          skip @[Task1.scala 24:63]
        else : @[Task1.scala 27:63]
          node _T_9 = eq(io.func3, UInt<3>("h05")) @[Task1.scala 27:29]
          node _T_10 = eq(io.branch, UInt<1>("h01")) @[Task1.scala 27:55]
          node _T_11 = and(_T_9, _T_10) @[Task1.scala 27:42]
          when _T_11 : @[Task1.scala 27:63]
            node _io_br_taken_T_3 = geq(io.arg_x, io.arg_y) @[Task1.scala 28:41]
            io.br_taken <= _io_br_taken_T_3 @[Task1.scala 28:29]
            skip @[Task1.scala 27:63]
          else : @[Task1.scala 30:63]
            node _T_12 = eq(io.func3, UInt<3>("h06")) @[Task1.scala 30:29]
            node _T_13 = eq(io.branch, UInt<1>("h01")) @[Task1.scala 30:55]
            node _T_14 = and(_T_12, _T_13) @[Task1.scala 30:42]
            when _T_14 : @[Task1.scala 30:63]
              node _io_br_taken_T_4 = lt(io.arg_x, io.arg_y) @[Task1.scala 31:41]
              io.br_taken <= _io_br_taken_T_4 @[Task1.scala 31:29]
              skip @[Task1.scala 30:63]
            else : @[Task1.scala 33:63]
              node _T_15 = eq(io.func3, UInt<3>("h07")) @[Task1.scala 33:29]
              node _T_16 = eq(io.branch, UInt<1>("h01")) @[Task1.scala 33:55]
              node _T_17 = and(_T_15, _T_16) @[Task1.scala 33:42]
              when _T_17 : @[Task1.scala 33:63]
                node _io_br_taken_T_5 = geq(io.arg_x, io.arg_y) @[Task1.scala 34:41]
                io.br_taken <= _io_br_taken_T_5 @[Task1.scala 34:29]
                skip @[Task1.scala 33:63]
              else : @[Task1.scala 36:20]
                io.br_taken <= UInt<1>("h00") @[Task1.scala 37:29]
                skip @[Task1.scala 36:20]
    
