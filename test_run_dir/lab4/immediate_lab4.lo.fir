circuit immediate_lab4 :
  module immediate_lab4 :
    input clock : Clock
    input reset : UInt<1>
    input io_instr : UInt<32>
    output io_immd_se : UInt<32>
    input io_pc : UInt<32>

    node opcode = bits(io_instr, 6, 0) @[Task2.scala 16:30]
    node imm31 = bits(io_instr, 31, 31) @[Task2.scala 17:29]
    node imm30 = bits(io_instr, 30, 25) @[Task2.scala 18:29]
    node imm24 = bits(io_instr, 24, 21) @[Task2.scala 19:29]
    node imm20 = bits(io_instr, 20, 20) @[Task2.scala 20:29]
    node imm19 = bits(io_instr, 19, 12) @[Task2.scala 21:29]
    node imm11 = bits(io_instr, 11, 8) @[Task2.scala 22:29]
    node imm7 = bits(io_instr, 7, 7) @[Task2.scala 23:28]
    node _i_T = bits(imm31, 0, 0) @[Bitwise.scala 72:15]
    node i_hi_hi_hi = mux(_i_T, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 72:12]
    node i_lo = cat(imm24, imm20) @[Cat.scala 30:58]
    node i_hi_hi = cat(i_hi_hi_hi, imm31) @[Cat.scala 30:58]
    node i_hi = cat(i_hi_hi, imm30) @[Cat.scala 30:58]
    node i = cat(i_hi, i_lo) @[Cat.scala 30:58]
    node _s_T = bits(imm31, 0, 0) @[Bitwise.scala 72:15]
    node s_hi_hi_hi = mux(_s_T, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 72:12]
    node s_lo = cat(imm11, imm7) @[Cat.scala 30:58]
    node s_hi_hi = cat(s_hi_hi_hi, imm31) @[Cat.scala 30:58]
    node s_hi = cat(s_hi_hi, imm30) @[Cat.scala 30:58]
    node s = cat(s_hi, s_lo) @[Cat.scala 30:58]
    node _sb_T = bits(imm31, 0, 0) @[Bitwise.scala 72:15]
    node sb_hi_hi_hi = mux(_sb_T, UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 72:12]
    node sb_lo_hi = cat(imm30, imm11) @[Cat.scala 30:58]
    node sb_lo = cat(sb_lo_hi, UInt<1>("h0")) @[Cat.scala 30:58]
    node sb_hi_hi = cat(sb_hi_hi_hi, imm31) @[Cat.scala 30:58]
    node sb_hi = cat(sb_hi_hi, imm7) @[Cat.scala 30:58]
    node _sb_T_1 = cat(sb_hi, sb_lo) @[Cat.scala 30:58]
    node _sb_T_2 = add(_sb_T_1, io_pc) @[Task2.scala 29:66]
    node sb = tail(_sb_T_2, 1) @[Task2.scala 29:66]
    node _uj_T = bits(imm31, 0, 0) @[Bitwise.scala 72:15]
    node uj_hi_hi_hi = mux(_uj_T, UInt<11>("h7ff"), UInt<11>("h0")) @[Bitwise.scala 72:12]
    node uj_lo_hi = cat(imm30, imm24) @[Cat.scala 30:58]
    node uj_lo = cat(uj_lo_hi, UInt<1>("h0")) @[Cat.scala 30:58]
    node uj_hi_lo = cat(imm19, imm20) @[Cat.scala 30:58]
    node uj_hi_hi = cat(uj_hi_hi_hi, imm31) @[Cat.scala 30:58]
    node uj_hi = cat(uj_hi_hi, uj_hi_lo) @[Cat.scala 30:58]
    node _uj_T_1 = cat(uj_hi, uj_lo) @[Cat.scala 30:58]
    node _uj_T_2 = add(_uj_T_1, io_pc) @[Task2.scala 31:73]
    node uj = tail(_uj_T_2, 1) @[Task2.scala 31:73]
    node u_lo = cat(imm20, imm19) @[Cat.scala 30:58]
    node u_hi_hi = cat(imm31, imm30) @[Cat.scala 30:58]
    node u_hi = cat(u_hi_hi, imm24) @[Cat.scala 30:58]
    node _u_T = cat(u_hi, u_lo) @[Cat.scala 30:58]
    node u = dshl(_u_T, UInt<4>("hc")) @[Task2.scala 33:53]
    node _io_immd_se_T = eq(opcode, UInt<6>("h23")) @[Task2.scala 37:17]
    node _io_immd_se_T_1 = eq(opcode, UInt<7>("h63")) @[Task2.scala 38:17]
    node _io_immd_se_T_2 = eq(opcode, UInt<7>("h6f")) @[Task2.scala 39:17]
    node _io_immd_se_T_3 = eq(opcode, UInt<5>("h17")) @[Task2.scala 40:17]
    node _io_immd_se_T_4 = leq(opcode, UInt<5>("h13")) @[Task2.scala 41:17]
    node _io_immd_se_T_5 = geq(opcode, UInt<2>("h3")) @[Task2.scala 41:35]
    node _io_immd_se_T_6 = or(_io_immd_se_T_4, _io_immd_se_T_5) @[Task2.scala 41:25]
    node _io_immd_se_T_7 = eq(opcode, UInt<5>("h1b")) @[Task2.scala 41:52]
    node _io_immd_se_T_8 = or(_io_immd_se_T_6, _io_immd_se_T_7) @[Task2.scala 41:42]
    node _io_immd_se_T_9 = eq(opcode, UInt<7>("h73")) @[Task2.scala 41:71]
    node _io_immd_se_T_10 = or(_io_immd_se_T_8, _io_immd_se_T_9) @[Task2.scala 41:61]
    node _io_immd_se_T_11 = mux(_io_immd_se_T_10, i, UInt<1>("h0")) @[Mux.scala 98:16]
    node _io_immd_se_T_12 = mux(_io_immd_se_T_3, u, _io_immd_se_T_11) @[Mux.scala 98:16]
    node _io_immd_se_T_13 = mux(_io_immd_se_T_2, uj, _io_immd_se_T_12) @[Mux.scala 98:16]
    node _io_immd_se_T_14 = mux(_io_immd_se_T_1, sb, _io_immd_se_T_13) @[Mux.scala 98:16]
    node _io_immd_se_T_15 = mux(_io_immd_se_T, s, _io_immd_se_T_14) @[Mux.scala 98:16]
    io_immd_se <= bits(_io_immd_se_T_15, 31, 0) @[Task2.scala 36:15]
