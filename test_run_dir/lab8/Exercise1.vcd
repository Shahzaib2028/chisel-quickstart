$version Generated by VerilatedVcd $end
$date Mon Apr 12 17:12:42 2021
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 4 clock $end
  $var wire 10 8 io_addr [9:0] $end
  $var wire  8 = io_dataIn_0 [7:0] $end
  $var wire  8 > io_dataIn_1 [7:0] $end
  $var wire  8 ? io_dataIn_2 [7:0] $end
  $var wire  8 @ io_dataIn_3 [7:0] $end
  $var wire  8 A io_dataOut_0 [7:0] $end
  $var wire  8 B io_dataOut_1 [7:0] $end
  $var wire  8 C io_dataOut_2 [7:0] $end
  $var wire  8 D io_dataOut_3 [7:0] $end
  $var wire  1 6 io_enable $end
  $var wire  1 9 io_mask_0 $end
  $var wire  1 : io_mask_1 $end
  $var wire  1 ; io_mask_2 $end
  $var wire  1 < io_mask_3 $end
  $var wire  1 7 io_write $end
  $var wire  1 5 reset $end
  $scope module Exercise1 $end
   $var wire  4 # Concat [3:0] $end
   $var wire  1 4 clock $end
   $var wire 10 8 io_addr [9:0] $end
   $var wire  8 = io_dataIn_0 [7:0] $end
   $var wire  8 > io_dataIn_1 [7:0] $end
   $var wire  8 ? io_dataIn_2 [7:0] $end
   $var wire  8 @ io_dataIn_3 [7:0] $end
   $var wire  8 A io_dataOut_0 [7:0] $end
   $var wire  8 B io_dataOut_1 [7:0] $end
   $var wire  8 C io_dataOut_2 [7:0] $end
   $var wire  8 D io_dataOut_3 [7:0] $end
   $var wire  1 6 io_enable $end
   $var wire  1 9 io_mask_0 $end
   $var wire  1 : io_mask_1 $end
   $var wire  1 ; io_mask_2 $end
   $var wire  1 < io_mask_3 $end
   $var wire  1 7 io_write $end
   $var wire 10 8 mem_0_MPORT_10_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_10_data [7:0] $end
   $var wire  1 O mem_0_MPORT_10_en $end
   $var wire  1 U mem_0_MPORT_10_mask $end
   $var wire 10 8 mem_0_MPORT_11_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_11_data [7:0] $end
   $var wire  1 P mem_0_MPORT_11_en $end
   $var wire  1 U mem_0_MPORT_11_mask $end
   $var wire 10 8 mem_0_MPORT_12_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_12_data [7:0] $end
   $var wire  1 Q mem_0_MPORT_12_en $end
   $var wire  1 U mem_0_MPORT_12_mask $end
   $var wire 10 8 mem_0_MPORT_13_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_13_data [7:0] $end
   $var wire  1 R mem_0_MPORT_13_en $end
   $var wire  1 U mem_0_MPORT_13_mask $end
   $var wire 10 8 mem_0_MPORT_14_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_14_data [7:0] $end
   $var wire  1 S mem_0_MPORT_14_en $end
   $var wire  1 U mem_0_MPORT_14_mask $end
   $var wire 10 8 mem_0_MPORT_15_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_15_data [7:0] $end
   $var wire  1 T mem_0_MPORT_15_en $end
   $var wire  1 U mem_0_MPORT_15_mask $end
   $var wire 10 % mem_0_MPORT_16_addr [9:0] $end
   $var wire 10 % mem_0_MPORT_16_addr_pipe_0 [9:0] $end
   $var wire  8 $ mem_0_MPORT_16_data [7:0] $end
   $var wire  1 ' mem_0_MPORT_16_en_pipe_0 $end
   $var wire 10 8 mem_0_MPORT_1_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_1_data [7:0] $end
   $var wire  1 F mem_0_MPORT_1_en $end
   $var wire  1 U mem_0_MPORT_1_mask $end
   $var wire 10 8 mem_0_MPORT_2_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_2_data [7:0] $end
   $var wire  1 G mem_0_MPORT_2_en $end
   $var wire  1 U mem_0_MPORT_2_mask $end
   $var wire 10 8 mem_0_MPORT_3_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_3_data [7:0] $end
   $var wire  1 H mem_0_MPORT_3_en $end
   $var wire  1 U mem_0_MPORT_3_mask $end
   $var wire 10 8 mem_0_MPORT_4_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_4_data [7:0] $end
   $var wire  1 I mem_0_MPORT_4_en $end
   $var wire  1 U mem_0_MPORT_4_mask $end
   $var wire 10 8 mem_0_MPORT_5_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_5_data [7:0] $end
   $var wire  1 J mem_0_MPORT_5_en $end
   $var wire  1 U mem_0_MPORT_5_mask $end
   $var wire 10 8 mem_0_MPORT_6_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_6_data [7:0] $end
   $var wire  1 K mem_0_MPORT_6_en $end
   $var wire  1 U mem_0_MPORT_6_mask $end
   $var wire 10 8 mem_0_MPORT_7_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_7_data [7:0] $end
   $var wire  1 L mem_0_MPORT_7_en $end
   $var wire  1 U mem_0_MPORT_7_mask $end
   $var wire 10 8 mem_0_MPORT_8_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_8_data [7:0] $end
   $var wire  1 M mem_0_MPORT_8_en $end
   $var wire  1 U mem_0_MPORT_8_mask $end
   $var wire 10 8 mem_0_MPORT_9_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_9_data [7:0] $end
   $var wire  1 N mem_0_MPORT_9_en $end
   $var wire  1 U mem_0_MPORT_9_mask $end
   $var wire 10 8 mem_0_MPORT_addr [9:0] $end
   $var wire  8 & mem_0_MPORT_data [7:0] $end
   $var wire  1 E mem_0_MPORT_en $end
   $var wire  1 U mem_0_MPORT_mask $end
   $var wire 10 8 mem_1_MPORT_10_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_10_data [7:0] $end
   $var wire  1 O mem_1_MPORT_10_en $end
   $var wire  1 U mem_1_MPORT_10_mask $end
   $var wire 10 8 mem_1_MPORT_11_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_11_data [7:0] $end
   $var wire  1 P mem_1_MPORT_11_en $end
   $var wire  1 U mem_1_MPORT_11_mask $end
   $var wire 10 8 mem_1_MPORT_12_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_12_data [7:0] $end
   $var wire  1 Q mem_1_MPORT_12_en $end
   $var wire  1 U mem_1_MPORT_12_mask $end
   $var wire 10 8 mem_1_MPORT_13_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_13_data [7:0] $end
   $var wire  1 R mem_1_MPORT_13_en $end
   $var wire  1 U mem_1_MPORT_13_mask $end
   $var wire 10 8 mem_1_MPORT_14_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_14_data [7:0] $end
   $var wire  1 S mem_1_MPORT_14_en $end
   $var wire  1 U mem_1_MPORT_14_mask $end
   $var wire 10 8 mem_1_MPORT_15_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_15_data [7:0] $end
   $var wire  1 T mem_1_MPORT_15_en $end
   $var wire  1 U mem_1_MPORT_15_mask $end
   $var wire 10 ) mem_1_MPORT_16_addr [9:0] $end
   $var wire 10 ) mem_1_MPORT_16_addr_pipe_0 [9:0] $end
   $var wire  8 ( mem_1_MPORT_16_data [7:0] $end
   $var wire  1 + mem_1_MPORT_16_en_pipe_0 $end
   $var wire 10 8 mem_1_MPORT_1_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_1_data [7:0] $end
   $var wire  1 F mem_1_MPORT_1_en $end
   $var wire  1 U mem_1_MPORT_1_mask $end
   $var wire 10 8 mem_1_MPORT_2_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_2_data [7:0] $end
   $var wire  1 G mem_1_MPORT_2_en $end
   $var wire  1 U mem_1_MPORT_2_mask $end
   $var wire 10 8 mem_1_MPORT_3_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_3_data [7:0] $end
   $var wire  1 H mem_1_MPORT_3_en $end
   $var wire  1 U mem_1_MPORT_3_mask $end
   $var wire 10 8 mem_1_MPORT_4_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_4_data [7:0] $end
   $var wire  1 I mem_1_MPORT_4_en $end
   $var wire  1 U mem_1_MPORT_4_mask $end
   $var wire 10 8 mem_1_MPORT_5_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_5_data [7:0] $end
   $var wire  1 J mem_1_MPORT_5_en $end
   $var wire  1 U mem_1_MPORT_5_mask $end
   $var wire 10 8 mem_1_MPORT_6_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_6_data [7:0] $end
   $var wire  1 K mem_1_MPORT_6_en $end
   $var wire  1 U mem_1_MPORT_6_mask $end
   $var wire 10 8 mem_1_MPORT_7_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_7_data [7:0] $end
   $var wire  1 L mem_1_MPORT_7_en $end
   $var wire  1 U mem_1_MPORT_7_mask $end
   $var wire 10 8 mem_1_MPORT_8_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_8_data [7:0] $end
   $var wire  1 M mem_1_MPORT_8_en $end
   $var wire  1 U mem_1_MPORT_8_mask $end
   $var wire 10 8 mem_1_MPORT_9_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_9_data [7:0] $end
   $var wire  1 N mem_1_MPORT_9_en $end
   $var wire  1 U mem_1_MPORT_9_mask $end
   $var wire 10 8 mem_1_MPORT_addr [9:0] $end
   $var wire  8 * mem_1_MPORT_data [7:0] $end
   $var wire  1 E mem_1_MPORT_en $end
   $var wire  1 U mem_1_MPORT_mask $end
   $var wire 10 8 mem_2_MPORT_10_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_10_data [7:0] $end
   $var wire  1 O mem_2_MPORT_10_en $end
   $var wire  1 U mem_2_MPORT_10_mask $end
   $var wire 10 8 mem_2_MPORT_11_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_11_data [7:0] $end
   $var wire  1 P mem_2_MPORT_11_en $end
   $var wire  1 U mem_2_MPORT_11_mask $end
   $var wire 10 8 mem_2_MPORT_12_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_12_data [7:0] $end
   $var wire  1 Q mem_2_MPORT_12_en $end
   $var wire  1 U mem_2_MPORT_12_mask $end
   $var wire 10 8 mem_2_MPORT_13_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_13_data [7:0] $end
   $var wire  1 R mem_2_MPORT_13_en $end
   $var wire  1 U mem_2_MPORT_13_mask $end
   $var wire 10 8 mem_2_MPORT_14_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_14_data [7:0] $end
   $var wire  1 S mem_2_MPORT_14_en $end
   $var wire  1 U mem_2_MPORT_14_mask $end
   $var wire 10 8 mem_2_MPORT_15_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_15_data [7:0] $end
   $var wire  1 T mem_2_MPORT_15_en $end
   $var wire  1 U mem_2_MPORT_15_mask $end
   $var wire 10 - mem_2_MPORT_16_addr [9:0] $end
   $var wire 10 - mem_2_MPORT_16_addr_pipe_0 [9:0] $end
   $var wire  8 , mem_2_MPORT_16_data [7:0] $end
   $var wire  1 / mem_2_MPORT_16_en_pipe_0 $end
   $var wire 10 8 mem_2_MPORT_1_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_1_data [7:0] $end
   $var wire  1 F mem_2_MPORT_1_en $end
   $var wire  1 U mem_2_MPORT_1_mask $end
   $var wire 10 8 mem_2_MPORT_2_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_2_data [7:0] $end
   $var wire  1 G mem_2_MPORT_2_en $end
   $var wire  1 U mem_2_MPORT_2_mask $end
   $var wire 10 8 mem_2_MPORT_3_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_3_data [7:0] $end
   $var wire  1 H mem_2_MPORT_3_en $end
   $var wire  1 U mem_2_MPORT_3_mask $end
   $var wire 10 8 mem_2_MPORT_4_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_4_data [7:0] $end
   $var wire  1 I mem_2_MPORT_4_en $end
   $var wire  1 U mem_2_MPORT_4_mask $end
   $var wire 10 8 mem_2_MPORT_5_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_5_data [7:0] $end
   $var wire  1 J mem_2_MPORT_5_en $end
   $var wire  1 U mem_2_MPORT_5_mask $end
   $var wire 10 8 mem_2_MPORT_6_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_6_data [7:0] $end
   $var wire  1 K mem_2_MPORT_6_en $end
   $var wire  1 U mem_2_MPORT_6_mask $end
   $var wire 10 8 mem_2_MPORT_7_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_7_data [7:0] $end
   $var wire  1 L mem_2_MPORT_7_en $end
   $var wire  1 U mem_2_MPORT_7_mask $end
   $var wire 10 8 mem_2_MPORT_8_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_8_data [7:0] $end
   $var wire  1 M mem_2_MPORT_8_en $end
   $var wire  1 U mem_2_MPORT_8_mask $end
   $var wire 10 8 mem_2_MPORT_9_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_9_data [7:0] $end
   $var wire  1 N mem_2_MPORT_9_en $end
   $var wire  1 U mem_2_MPORT_9_mask $end
   $var wire 10 8 mem_2_MPORT_addr [9:0] $end
   $var wire  8 . mem_2_MPORT_data [7:0] $end
   $var wire  1 E mem_2_MPORT_en $end
   $var wire  1 U mem_2_MPORT_mask $end
   $var wire 10 8 mem_3_MPORT_10_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_10_data [7:0] $end
   $var wire  1 O mem_3_MPORT_10_en $end
   $var wire  1 U mem_3_MPORT_10_mask $end
   $var wire 10 8 mem_3_MPORT_11_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_11_data [7:0] $end
   $var wire  1 P mem_3_MPORT_11_en $end
   $var wire  1 U mem_3_MPORT_11_mask $end
   $var wire 10 8 mem_3_MPORT_12_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_12_data [7:0] $end
   $var wire  1 Q mem_3_MPORT_12_en $end
   $var wire  1 U mem_3_MPORT_12_mask $end
   $var wire 10 8 mem_3_MPORT_13_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_13_data [7:0] $end
   $var wire  1 R mem_3_MPORT_13_en $end
   $var wire  1 U mem_3_MPORT_13_mask $end
   $var wire 10 8 mem_3_MPORT_14_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_14_data [7:0] $end
   $var wire  1 S mem_3_MPORT_14_en $end
   $var wire  1 U mem_3_MPORT_14_mask $end
   $var wire 10 8 mem_3_MPORT_15_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_15_data [7:0] $end
   $var wire  1 T mem_3_MPORT_15_en $end
   $var wire  1 U mem_3_MPORT_15_mask $end
   $var wire 10 1 mem_3_MPORT_16_addr [9:0] $end
   $var wire 10 1 mem_3_MPORT_16_addr_pipe_0 [9:0] $end
   $var wire  8 0 mem_3_MPORT_16_data [7:0] $end
   $var wire  1 3 mem_3_MPORT_16_en_pipe_0 $end
   $var wire 10 8 mem_3_MPORT_1_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_1_data [7:0] $end
   $var wire  1 F mem_3_MPORT_1_en $end
   $var wire  1 U mem_3_MPORT_1_mask $end
   $var wire 10 8 mem_3_MPORT_2_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_2_data [7:0] $end
   $var wire  1 G mem_3_MPORT_2_en $end
   $var wire  1 U mem_3_MPORT_2_mask $end
   $var wire 10 8 mem_3_MPORT_3_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_3_data [7:0] $end
   $var wire  1 H mem_3_MPORT_3_en $end
   $var wire  1 U mem_3_MPORT_3_mask $end
   $var wire 10 8 mem_3_MPORT_4_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_4_data [7:0] $end
   $var wire  1 I mem_3_MPORT_4_en $end
   $var wire  1 U mem_3_MPORT_4_mask $end
   $var wire 10 8 mem_3_MPORT_5_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_5_data [7:0] $end
   $var wire  1 J mem_3_MPORT_5_en $end
   $var wire  1 U mem_3_MPORT_5_mask $end
   $var wire 10 8 mem_3_MPORT_6_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_6_data [7:0] $end
   $var wire  1 K mem_3_MPORT_6_en $end
   $var wire  1 U mem_3_MPORT_6_mask $end
   $var wire 10 8 mem_3_MPORT_7_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_7_data [7:0] $end
   $var wire  1 L mem_3_MPORT_7_en $end
   $var wire  1 U mem_3_MPORT_7_mask $end
   $var wire 10 8 mem_3_MPORT_8_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_8_data [7:0] $end
   $var wire  1 M mem_3_MPORT_8_en $end
   $var wire  1 U mem_3_MPORT_8_mask $end
   $var wire 10 8 mem_3_MPORT_9_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_9_data [7:0] $end
   $var wire  1 N mem_3_MPORT_9_en $end
   $var wire  1 U mem_3_MPORT_9_mask $end
   $var wire 10 8 mem_3_MPORT_addr [9:0] $end
   $var wire  8 2 mem_3_MPORT_data [7:0] $end
   $var wire  1 E mem_3_MPORT_en $end
   $var wire  1 U mem_3_MPORT_mask $end
   $var wire  1 5 reset $end
   $var wire  8 & vector_0 [7:0] $end
   $var wire  8 * vector_1 [7:0] $end
   $var wire  8 . vector_2 [7:0] $end
   $var wire  8 2 vector_3 [7:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000 #
b00000000 $
b0000000000 %
b00000000 &
0'
b00000000 (
b0000000000 )
b00000000 *
0+
b00000000 ,
b0000000000 -
b00000000 .
0/
b00000000 0
b0000000000 1
b00000000 2
03
04
15
06
07
b0000000000 8
09
0:
0;
0<
b00000000 =
b00000000 >
b00000000 ?
b00000000 @
b00000000 A
b00000000 B
b00000000 C
b00000000 D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
1U
#1
14
#2
b0011 #
04
05
16
17
b0000000101 8
19
1:
b00000001 =
b00000010 >
b00000011 ?
b00000100 @
1H
#3
b0000000101 %
b00000001 &
1'
b0000000101 )
b00000010 *
1+
b0000000101 -
1/
b0000000101 1
13
14
#4
04
#5
b00000001 $
b00000010 (
14
b00000001 A
b00000010 B
#6
04
#7
14
#8
04
#9
14
#10
04
#11
14
#12
04
#13
14
#14
04
#15
14
#16
04
#17
14
#18
04
#19
14
#20
04
#21
14
#22
04
#23
14
#24
04
#25
14
#26
04
#27
14
#28
04
#29
14
#30
04
#31
14
#32
04
#33
14
#34
04
#35
14
#36
04
#37
14
#38
04
#39
14
#40
04
#41
14
#42
b0000 #
04
06
07
b0000000000 8
09
0:
b00000000 =
b00000000 >
b00000000 ?
b00000000 @
0H
#43
0'
0+
0/
03
14
