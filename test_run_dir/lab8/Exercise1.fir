;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Exercise1 : 
  module Exercise1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, flip write : UInt<1>, flip addr : UInt<10>, flip mask : UInt<1>[4], flip dataIn : UInt<8>[4], dataOut : UInt<8>[4]}
    
    smem mem : UInt<8>[4][1024], undefined @[Exercise1.scala 19:26]
    reg vector : UInt[4], clock @[Exercise1.scala 20:21]
    node Concat_lo = cat(io.mask[1], io.mask[0]) @[Cat.scala 30:58]
    node Concat_hi = cat(io.mask[3], io.mask[2]) @[Cat.scala 30:58]
    node Concat = cat(Concat_hi, Concat_lo) @[Cat.scala 30:58]
    node _T = eq(io.write, UInt<1>("h01")) @[Exercise1.scala 52:20]
    when _T : @[Exercise1.scala 52:31]
      node _T_1 = eq(Concat, UInt<1>("h00")) @[Exercise1.scala 53:21]
      when _T_1 : @[Exercise1.scala 53:29]
        vector[0] <= UInt<1>("h00") @[Exercise1.scala 54:23]
        vector[1] <= UInt<1>("h00") @[Exercise1.scala 55:23]
        vector[2] <= UInt<1>("h00") @[Exercise1.scala 56:23]
        vector[3] <= UInt<1>("h00") @[Exercise1.scala 57:23]
        write mport MPORT = mem[io.addr], clock
        MPORT[0] <= vector[0]
        MPORT[1] <= vector[1]
        MPORT[2] <= vector[2]
        MPORT[3] <= vector[3]
        skip @[Exercise1.scala 53:29]
      else : @[Exercise1.scala 59:35]
        node _T_2 = eq(Concat, UInt<1>("h01")) @[Exercise1.scala 59:27]
        when _T_2 : @[Exercise1.scala 59:35]
          vector[0] <= io.dataIn[0] @[Exercise1.scala 60:23]
          vector[1] <= UInt<1>("h00") @[Exercise1.scala 61:23]
          vector[2] <= UInt<1>("h00") @[Exercise1.scala 62:23]
          vector[3] <= UInt<1>("h00") @[Exercise1.scala 63:23]
          write mport MPORT_1 = mem[io.addr], clock
          MPORT_1[0] <= vector[0]
          MPORT_1[1] <= vector[1]
          MPORT_1[2] <= vector[2]
          MPORT_1[3] <= vector[3]
          skip @[Exercise1.scala 59:35]
        else : @[Exercise1.scala 65:35]
          node _T_3 = eq(Concat, UInt<2>("h02")) @[Exercise1.scala 65:27]
          when _T_3 : @[Exercise1.scala 65:35]
            vector[0] <= UInt<1>("h00") @[Exercise1.scala 66:23]
            vector[1] <= io.dataIn[1] @[Exercise1.scala 67:23]
            vector[2] <= UInt<1>("h00") @[Exercise1.scala 68:23]
            vector[3] <= UInt<1>("h00") @[Exercise1.scala 69:23]
            write mport MPORT_2 = mem[io.addr], clock
            MPORT_2[0] <= vector[0]
            MPORT_2[1] <= vector[1]
            MPORT_2[2] <= vector[2]
            MPORT_2[3] <= vector[3]
            skip @[Exercise1.scala 65:35]
          else : @[Exercise1.scala 71:35]
            node _T_4 = eq(Concat, UInt<2>("h03")) @[Exercise1.scala 71:27]
            when _T_4 : @[Exercise1.scala 71:35]
              vector[0] <= io.dataIn[0] @[Exercise1.scala 72:23]
              vector[1] <= io.dataIn[1] @[Exercise1.scala 73:23]
              vector[2] <= UInt<1>("h00") @[Exercise1.scala 74:23]
              vector[3] <= UInt<1>("h00") @[Exercise1.scala 75:23]
              write mport MPORT_3 = mem[io.addr], clock
              MPORT_3[0] <= vector[0]
              MPORT_3[1] <= vector[1]
              MPORT_3[2] <= vector[2]
              MPORT_3[3] <= vector[3]
              skip @[Exercise1.scala 71:35]
            else : @[Exercise1.scala 77:35]
              node _T_5 = eq(Concat, UInt<3>("h04")) @[Exercise1.scala 77:27]
              when _T_5 : @[Exercise1.scala 77:35]
                vector[0] <= UInt<1>("h00") @[Exercise1.scala 78:23]
                vector[1] <= UInt<1>("h00") @[Exercise1.scala 79:23]
                vector[2] <= io.dataIn[2] @[Exercise1.scala 80:23]
                vector[3] <= UInt<1>("h00") @[Exercise1.scala 81:23]
                write mport MPORT_4 = mem[io.addr], clock
                MPORT_4[0] <= vector[0]
                MPORT_4[1] <= vector[1]
                MPORT_4[2] <= vector[2]
                MPORT_4[3] <= vector[3]
                skip @[Exercise1.scala 77:35]
              else : @[Exercise1.scala 83:35]
                node _T_6 = eq(Concat, UInt<3>("h05")) @[Exercise1.scala 83:27]
                when _T_6 : @[Exercise1.scala 83:35]
                  vector[0] <= io.dataIn[0] @[Exercise1.scala 84:23]
                  vector[1] <= UInt<1>("h00") @[Exercise1.scala 85:23]
                  vector[2] <= io.dataIn[2] @[Exercise1.scala 86:23]
                  vector[3] <= UInt<1>("h00") @[Exercise1.scala 87:23]
                  write mport MPORT_5 = mem[io.addr], clock
                  MPORT_5[0] <= vector[0]
                  MPORT_5[1] <= vector[1]
                  MPORT_5[2] <= vector[2]
                  MPORT_5[3] <= vector[3]
                  skip @[Exercise1.scala 83:35]
                else : @[Exercise1.scala 89:35]
                  node _T_7 = eq(Concat, UInt<3>("h06")) @[Exercise1.scala 89:27]
                  when _T_7 : @[Exercise1.scala 89:35]
                    vector[0] <= UInt<1>("h00") @[Exercise1.scala 90:23]
                    vector[1] <= io.dataIn[1] @[Exercise1.scala 91:23]
                    vector[2] <= io.dataIn[2] @[Exercise1.scala 92:23]
                    vector[3] <= UInt<1>("h00") @[Exercise1.scala 93:23]
                    write mport MPORT_6 = mem[io.addr], clock
                    MPORT_6[0] <= vector[0]
                    MPORT_6[1] <= vector[1]
                    MPORT_6[2] <= vector[2]
                    MPORT_6[3] <= vector[3]
                    skip @[Exercise1.scala 89:35]
                  else : @[Exercise1.scala 95:35]
                    node _T_8 = eq(Concat, UInt<3>("h07")) @[Exercise1.scala 95:27]
                    when _T_8 : @[Exercise1.scala 95:35]
                      vector[0] <= io.dataIn[0] @[Exercise1.scala 96:23]
                      vector[1] <= io.dataIn[1] @[Exercise1.scala 97:23]
                      vector[2] <= io.dataIn[2] @[Exercise1.scala 98:23]
                      vector[3] <= UInt<1>("h00") @[Exercise1.scala 99:23]
                      write mport MPORT_7 = mem[io.addr], clock
                      MPORT_7[0] <= vector[0]
                      MPORT_7[1] <= vector[1]
                      MPORT_7[2] <= vector[2]
                      MPORT_7[3] <= vector[3]
                      skip @[Exercise1.scala 95:35]
                    else : @[Exercise1.scala 101:35]
                      node _T_9 = eq(Concat, UInt<4>("h08")) @[Exercise1.scala 101:27]
                      when _T_9 : @[Exercise1.scala 101:35]
                        vector[0] <= UInt<1>("h00") @[Exercise1.scala 102:23]
                        vector[1] <= UInt<1>("h00") @[Exercise1.scala 103:23]
                        vector[2] <= UInt<1>("h00") @[Exercise1.scala 104:23]
                        vector[3] <= io.dataIn[3] @[Exercise1.scala 105:23]
                        write mport MPORT_8 = mem[io.addr], clock
                        MPORT_8[0] <= vector[0]
                        MPORT_8[1] <= vector[1]
                        MPORT_8[2] <= vector[2]
                        MPORT_8[3] <= vector[3]
                        skip @[Exercise1.scala 101:35]
                      else : @[Exercise1.scala 107:35]
                        node _T_10 = eq(Concat, UInt<4>("h09")) @[Exercise1.scala 107:27]
                        when _T_10 : @[Exercise1.scala 107:35]
                          vector[0] <= io.dataIn[0] @[Exercise1.scala 108:23]
                          vector[1] <= UInt<1>("h00") @[Exercise1.scala 109:23]
                          vector[2] <= UInt<1>("h00") @[Exercise1.scala 110:23]
                          vector[3] <= io.dataIn[3] @[Exercise1.scala 111:23]
                          write mport MPORT_9 = mem[io.addr], clock
                          MPORT_9[0] <= vector[0]
                          MPORT_9[1] <= vector[1]
                          MPORT_9[2] <= vector[2]
                          MPORT_9[3] <= vector[3]
                          skip @[Exercise1.scala 107:35]
                        else : @[Exercise1.scala 113:36]
                          node _T_11 = eq(Concat, UInt<4>("h0a")) @[Exercise1.scala 113:27]
                          when _T_11 : @[Exercise1.scala 113:36]
                            vector[0] <= UInt<1>("h00") @[Exercise1.scala 114:23]
                            vector[1] <= io.dataIn[1] @[Exercise1.scala 115:23]
                            vector[2] <= UInt<1>("h00") @[Exercise1.scala 116:23]
                            vector[3] <= io.dataIn[3] @[Exercise1.scala 117:23]
                            write mport MPORT_10 = mem[io.addr], clock
                            MPORT_10[0] <= vector[0]
                            MPORT_10[1] <= vector[1]
                            MPORT_10[2] <= vector[2]
                            MPORT_10[3] <= vector[3]
                            skip @[Exercise1.scala 113:36]
                          else : @[Exercise1.scala 119:36]
                            node _T_12 = eq(Concat, UInt<4>("h0b")) @[Exercise1.scala 119:27]
                            when _T_12 : @[Exercise1.scala 119:36]
                              vector[0] <= io.dataIn[0] @[Exercise1.scala 120:23]
                              vector[1] <= io.dataIn[1] @[Exercise1.scala 121:23]
                              vector[2] <= UInt<1>("h00") @[Exercise1.scala 122:23]
                              vector[3] <= io.dataIn[3] @[Exercise1.scala 123:23]
                              write mport MPORT_11 = mem[io.addr], clock
                              MPORT_11[0] <= vector[0]
                              MPORT_11[1] <= vector[1]
                              MPORT_11[2] <= vector[2]
                              MPORT_11[3] <= vector[3]
                              skip @[Exercise1.scala 119:36]
                            else : @[Exercise1.scala 125:36]
                              node _T_13 = eq(Concat, UInt<4>("h0c")) @[Exercise1.scala 125:27]
                              when _T_13 : @[Exercise1.scala 125:36]
                                vector[0] <= UInt<1>("h00") @[Exercise1.scala 126:23]
                                vector[1] <= UInt<1>("h00") @[Exercise1.scala 127:23]
                                vector[2] <= io.dataIn[2] @[Exercise1.scala 128:23]
                                vector[3] <= io.dataIn[3] @[Exercise1.scala 129:23]
                                write mport MPORT_12 = mem[io.addr], clock
                                MPORT_12[0] <= vector[0]
                                MPORT_12[1] <= vector[1]
                                MPORT_12[2] <= vector[2]
                                MPORT_12[3] <= vector[3]
                                skip @[Exercise1.scala 125:36]
                              else : @[Exercise1.scala 131:36]
                                node _T_14 = eq(Concat, UInt<4>("h0d")) @[Exercise1.scala 131:27]
                                when _T_14 : @[Exercise1.scala 131:36]
                                  vector[0] <= io.dataIn[0] @[Exercise1.scala 132:23]
                                  vector[1] <= UInt<1>("h00") @[Exercise1.scala 133:23]
                                  vector[2] <= io.dataIn[2] @[Exercise1.scala 134:23]
                                  vector[3] <= io.dataIn[3] @[Exercise1.scala 135:23]
                                  write mport MPORT_13 = mem[io.addr], clock
                                  MPORT_13[0] <= vector[0]
                                  MPORT_13[1] <= vector[1]
                                  MPORT_13[2] <= vector[2]
                                  MPORT_13[3] <= vector[3]
                                  skip @[Exercise1.scala 131:36]
                                else : @[Exercise1.scala 137:36]
                                  node _T_15 = eq(Concat, UInt<4>("h0e")) @[Exercise1.scala 137:27]
                                  when _T_15 : @[Exercise1.scala 137:36]
                                    vector[0] <= UInt<1>("h00") @[Exercise1.scala 138:23]
                                    vector[1] <= io.dataIn[1] @[Exercise1.scala 139:23]
                                    vector[2] <= io.dataIn[2] @[Exercise1.scala 140:23]
                                    vector[3] <= io.dataIn[3] @[Exercise1.scala 141:23]
                                    write mport MPORT_14 = mem[io.addr], clock
                                    MPORT_14[0] <= vector[0]
                                    MPORT_14[1] <= vector[1]
                                    MPORT_14[2] <= vector[2]
                                    MPORT_14[3] <= vector[3]
                                    skip @[Exercise1.scala 137:36]
                                  else : @[Exercise1.scala 143:36]
                                    node _T_16 = eq(Concat, UInt<4>("h0f")) @[Exercise1.scala 143:27]
                                    when _T_16 : @[Exercise1.scala 143:36]
                                      vector[0] <= io.dataIn[0] @[Exercise1.scala 144:23]
                                      vector[1] <= io.dataIn[1] @[Exercise1.scala 145:23]
                                      vector[2] <= io.dataIn[2] @[Exercise1.scala 146:23]
                                      vector[3] <= io.dataIn[3] @[Exercise1.scala 147:23]
                                      write mport MPORT_15 = mem[io.addr], clock
                                      MPORT_15[0] <= vector[0]
                                      MPORT_15[1] <= vector[1]
                                      MPORT_15[2] <= vector[2]
                                      MPORT_15[3] <= vector[3]
                                      skip @[Exercise1.scala 143:36]
      skip @[Exercise1.scala 52:31]
    wire _WIRE : UInt @[Exercise1.scala 153:27]
    _WIRE is invalid @[Exercise1.scala 153:27]
    when io.enable : @[Exercise1.scala 153:27]
      _WIRE <= io.addr @[Exercise1.scala 153:27]
      node _T_17 = or(_WIRE, UInt<10>("h00")) @[Exercise1.scala 153:27]
      node _T_18 = bits(_T_17, 9, 0) @[Exercise1.scala 153:27]
      read mport MPORT_16 = mem[_T_18], clock @[Exercise1.scala 153:27]
      skip @[Exercise1.scala 153:27]
    io.dataOut[0] <= MPORT_16[0] @[Exercise1.scala 153:16]
    io.dataOut[1] <= MPORT_16[1] @[Exercise1.scala 153:16]
    io.dataOut[2] <= MPORT_16[2] @[Exercise1.scala 153:16]
    io.dataOut[3] <= MPORT_16[3] @[Exercise1.scala 153:16]
    
