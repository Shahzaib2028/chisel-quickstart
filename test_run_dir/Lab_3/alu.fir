;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit alu : 
  module alu : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : SInt<32>, flip b : SInt<32>, flip ALUcont : UInt<5>, out : SInt<32>}
    
    io.out <= asSInt(UInt<1>("h00")) @[Exercise2.scala 45:24]
    node _T = eq(UInt<1>("h00"), io.ALUcont) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _io_out_T = add(io.a, io.b) @[Exercise2.scala 49:48]
      node _io_out_T_1 = tail(_io_out_T, 1) @[Exercise2.scala 49:48]
      node _io_out_T_2 = asSInt(_io_out_T_1) @[Exercise2.scala 49:48]
      io.out <= _io_out_T_2 @[Exercise2.scala 49:40]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<1>("h01"), io.ALUcont) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        node shift_left = bits(io.b, 4, 0) @[Exercise2.scala 52:54]
        node _io_out_T_3 = dshl(io.a, shift_left) @[Exercise2.scala 53:48]
        io.out <= _io_out_T_3 @[Exercise2.scala 53:40]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<2>("h02"), io.ALUcont) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          node _T_3 = lt(io.a, io.b) @[Exercise2.scala 56:43]
          when _T_3 : @[Exercise2.scala 56:50]
            io.out <= asSInt(UInt<2>("h01")) @[Exercise2.scala 57:48]
            skip @[Exercise2.scala 56:50]
          else : @[Exercise2.scala 58:44]
            io.out <= asSInt(UInt<1>("h00")) @[Exercise2.scala 59:48]
            skip @[Exercise2.scala 58:44]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_4 = eq(UInt<2>("h03"), io.ALUcont) @[Conditional.scala 37:30]
          when _T_4 : @[Conditional.scala 39:67]
            node _T_5 = asUInt(io.a) @[Exercise2.scala 63:43]
            node _T_6 = asUInt(io.b) @[Exercise2.scala 63:57]
            node _T_7 = lt(_T_5, _T_6) @[Exercise2.scala 63:50]
            when _T_7 : @[Exercise2.scala 63:64]
              io.out <= asSInt(UInt<2>("h01")) @[Exercise2.scala 64:48]
              skip @[Exercise2.scala 63:64]
            else : @[Exercise2.scala 65:44]
              io.out <= asSInt(UInt<1>("h00")) @[Exercise2.scala 66:48]
              skip @[Exercise2.scala 65:44]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_8 = eq(UInt<3>("h04"), io.ALUcont) @[Conditional.scala 37:30]
            when _T_8 : @[Conditional.scala 39:67]
              node _io_out_T_4 = xor(io.a, io.b) @[Exercise2.scala 70:49]
              node _io_out_T_5 = asSInt(_io_out_T_4) @[Exercise2.scala 70:49]
              io.out <= _io_out_T_5 @[Exercise2.scala 70:40]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_9 = eq(UInt<3>("h05"), io.ALUcont) @[Conditional.scala 37:30]
              when _T_9 : @[Conditional.scala 39:67]
                node shift_right = bits(io.b, 4, 0) @[Exercise2.scala 73:55]
                node _io_out_T_6 = dshr(io.a, shift_right) @[Exercise2.scala 74:48]
                io.out <= _io_out_T_6 @[Exercise2.scala 74:40]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_10 = eq(UInt<3>("h06"), io.ALUcont) @[Conditional.scala 37:30]
                when _T_10 : @[Conditional.scala 39:67]
                  node _io_out_T_7 = or(io.a, io.b) @[Exercise2.scala 77:49]
                  node _io_out_T_8 = asSInt(_io_out_T_7) @[Exercise2.scala 77:49]
                  io.out <= _io_out_T_8 @[Exercise2.scala 77:40]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_11 = eq(UInt<3>("h07"), io.ALUcont) @[Conditional.scala 37:30]
                  when _T_11 : @[Conditional.scala 39:67]
                    node _io_out_T_9 = and(io.a, io.b) @[Exercise2.scala 80:49]
                    node _io_out_T_10 = asSInt(_io_out_T_9) @[Exercise2.scala 80:49]
                    io.out <= _io_out_T_10 @[Exercise2.scala 80:40]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_12 = eq(UInt<4>("h08"), io.ALUcont) @[Conditional.scala 37:30]
                    when _T_12 : @[Conditional.scala 39:67]
                      node _io_out_T_11 = sub(io.a, io.b) @[Exercise2.scala 83:49]
                      node _io_out_T_12 = tail(_io_out_T_11, 1) @[Exercise2.scala 83:49]
                      node _io_out_T_13 = asSInt(_io_out_T_12) @[Exercise2.scala 83:49]
                      io.out <= _io_out_T_13 @[Exercise2.scala 83:40]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_13 = eq(UInt<4>("h0d"), io.ALUcont) @[Conditional.scala 37:30]
                      when _T_13 : @[Conditional.scala 39:67]
                        node shift_right_a = bits(io.b, 4, 0) @[Exercise2.scala 86:57]
                        node _io_out_T_14 = dshr(io.a, shift_right_a) @[Exercise2.scala 87:48]
                        io.out <= _io_out_T_14 @[Exercise2.scala 87:40]
                        skip @[Conditional.scala 39:67]
    
