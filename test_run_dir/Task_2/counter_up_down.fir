;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit counter_up_down : 
  module counter_up_down : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip data_in : UInt<8>, flip reload : UInt<1>, out : UInt<1>}
    
    reg counter : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Task2.scala 13:31]
    reg max_count : UInt<8>, clock with : (reset => (reset, UInt<8>("h06"))) @[Task2.scala 14:33]
    node _T = eq(io.reload, UInt<1>("h01")) @[Task2.scala 16:25]
    when _T : @[Task2.scala 16:33]
      counter <= UInt<1>("h00") @[Task2.scala 17:25]
      skip @[Task2.scala 16:33]
    else : @[Task2.scala 18:20]
      node _T_1 = neq(counter, max_count) @[Task2.scala 19:31]
      when _T_1 : @[Task2.scala 19:45]
        node _counter_T = add(counter, UInt<1>("h01")) @[Task2.scala 20:44]
        node _counter_T_1 = tail(_counter_T, 1) @[Task2.scala 20:44]
        counter <= _counter_T_1 @[Task2.scala 20:33]
        skip @[Task2.scala 19:45]
      else : @[Task2.scala 21:50]
        node _T_2 = eq(counter, max_count) @[Task2.scala 21:36]
        when _T_2 : @[Task2.scala 21:50]
          node _counter_T_2 = sub(counter, UInt<1>("h01")) @[Task2.scala 23:52]
          node _counter_T_3 = tail(_counter_T_2, 1) @[Task2.scala 23:52]
          counter <= _counter_T_3 @[Task2.scala 23:41]
          node _counter_T_4 = sub(counter, UInt<1>("h01")) @[Task2.scala 23:52]
          node _counter_T_5 = tail(_counter_T_4, 1) @[Task2.scala 23:52]
          counter <= _counter_T_5 @[Task2.scala 23:41]
          node _counter_T_6 = sub(counter, UInt<1>("h01")) @[Task2.scala 23:52]
          node _counter_T_7 = tail(_counter_T_6, 1) @[Task2.scala 23:52]
          counter <= _counter_T_7 @[Task2.scala 23:41]
          node _counter_T_8 = sub(counter, UInt<1>("h01")) @[Task2.scala 23:52]
          node _counter_T_9 = tail(_counter_T_8, 1) @[Task2.scala 23:52]
          counter <= _counter_T_9 @[Task2.scala 23:41]
          node _counter_T_10 = sub(counter, UInt<1>("h01")) @[Task2.scala 23:52]
          node _counter_T_11 = tail(_counter_T_10, 1) @[Task2.scala 23:52]
          counter <= _counter_T_11 @[Task2.scala 23:41]
          node _counter_T_12 = sub(counter, UInt<1>("h01")) @[Task2.scala 23:52]
          node _counter_T_13 = tail(_counter_T_12, 1) @[Task2.scala 23:52]
          counter <= _counter_T_13 @[Task2.scala 23:41]
          node _counter_T_14 = sub(counter, UInt<1>("h01")) @[Task2.scala 23:52]
          node _counter_T_15 = tail(_counter_T_14, 1) @[Task2.scala 23:52]
          counter <= _counter_T_15 @[Task2.scala 23:41]
          skip @[Task2.scala 21:50]
        else : @[Task2.scala 26:28]
          skip @[Task2.scala 26:28]
      skip @[Task2.scala 18:20]
    node _io_out_T = eq(counter, UInt<1>("h00")) @[Task2.scala 30:32]
    node _io_out_T_1 = eq(counter, max_count) @[Task2.scala 30:51]
    node _io_out_T_2 = or(_io_out_T, _io_out_T_1) @[Task2.scala 30:40]
    node _io_out_T_3 = mux(_io_out_T_2, UInt<1>("h01"), UInt<1>("h00")) @[Task2.scala 30:22]
    io.out <= _io_out_T_3 @[Task2.scala 30:16]
    
